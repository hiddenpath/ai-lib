[package]
name = "ai-lib"
version = "0.3.1"
edition = "2021"
authors = ["AI-lib Contributors"]
description = "A unified AI SDK for Rust providing a single interface for multiple AI providers with hybrid architecture"
license = "MIT OR Apache-2.0"
readme = "readme.md"
repository = "https://github.com/hiddenpath/ai-lib"
homepage = "https://www.ailib.info"
documentation = "https://docs.rs/ai-lib"
keywords = ["ai", "llm", "api", "agent", "unify"]
categories = ["api-bindings", "web-programming::http-client"]
include = [
    "src/**/*",
    "examples/*",
    "Cargo.toml",
    "readme.md",
    "README_CN.md",
    "LICENSE-MIT",
    "LICENSE-APACHE",
    "CHANGELOG.md"
]
rust-version = "1.70"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
async-trait = "0.1"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
tokio = { version = "1.0", features = ["full"] }
thiserror = "2.0.16"
reqwest = { version = "0.12", features = ["json", "stream", "multipart"] }
futures = "0.3"
reqwest-eventsource = "0.6"
tokio-stream = "0.1"
chrono = { version = "0.4.42", features = ["serde"] }
backoff = { version = "0.4", features = ["tokio"] }
bytes = "1.4"
base64 = "0.22.1"
httpmock = "0.7.0"

[dev-dependencies]
md5 = "0.8.0"

[features]
# No default features to keep OSS core lean; opt-in progressive complexity
default = []

# Interceptor pipeline (retry, rate limiters, circuit breaker wiring lives behind this)
interceptors = []

# Unified reqwest client factory/shared transport settings
unified_transport = []

# Common SSE parser used by adapters (feature-gated until wiring is complete)
unified_sse = []

# Minimal cost accounting metrics (env-driven rates)
cost_metrics = []

# ModelArray-based routing MVP
routing_mvp = []

# Observability interfaces (Tracer, AuditSink)
observability = []

# Config hot-reload traits (ConfigProvider/Watcher)
config_hot_reload = []